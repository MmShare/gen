<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.gen.mapper.ManagerRoleMapper">
  <resultMap id="BaseResultMap" type="com.example.gen.entity.ManagerRole">
    <id column="manager_id" jdbcType="INTEGER" property="managerId" />
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_manager_id" jdbcType="INTEGER" property="createManagerId" />
  </resultMap>
  <sql id="Base_Column_List">
    manager_id, role_id, create_time, update_time, create_manager_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from manager_role
    where manager_id = #{managerId,jdbcType=INTEGER}
      and role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from manager_role
    where manager_id = #{managerId,jdbcType=INTEGER}
      and role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.gen.entity.ManagerRole">
    insert into manager_role (manager_id, role_id, create_time, 
      update_time, create_manager_id)
    values (#{managerId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createManagerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.gen.entity.ManagerRole">
    insert into manager_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createManagerId != null">
        create_manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null">
        #{createManagerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.gen.entity.ManagerRole">
    update manager_role
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null">
        create_manager_id = #{createManagerId,jdbcType=INTEGER},
      </if>
    </set>
    where manager_id = #{managerId,jdbcType=INTEGER}
      and role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.gen.entity.ManagerRole">
    update manager_role
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_manager_id = #{createManagerId,jdbcType=INTEGER}
    where manager_id = #{managerId,jdbcType=INTEGER}
      and role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>